import {put} from 'redux-saga/effects';
import axios from '../../axios';
import * as actions from '../Actions/index';


export function* saveResultSaga(action){
    yield put(actions.saveResultStart());
    const saveData={
        userId:action.uid,
        result:action.result,
        date:new Date()
    };
    const response= yield axios.post('/results.json?auth='+action.token,saveData);
    try{
        yield put(actions.saveSuccess(response.data.name,saveData)); //name: child name, generated by Firebase
    }catch(error){
        yield put(actions.saveFailed(error));
    }
}

export function* fetchResultsSaga(action){
    yield put(actions.fetchResultsStart());
    const queryParams='?auth='+action.token+'&orderBy="userId"&equalTo="'+action.uid+'"';
    try{
        const response=yield axios.get('/results.json'+queryParams);
        let fetchedResults=[];
        for(let key in response.data){
            fetchedResults.push({
                ...response.data[key],
                id:key
            });
        }
        yield put(actions.fetchResultsSuccess(fetchedResults));
    }
    catch(error){
        yield put(actions.fetchResultsFailed(error));
    }
}

export function* fetchSingleResultSaga (action){
    yield put(actions.fetchSelectedResultStart());
    const queryParams='?auth='+action.token+'&orderBy="userId"&equalTo="'+action.uid+'"';
    try{
        const response= yield axios.get('/results.json'+queryParams);
        let fetchedResults=[];
        for(let key in response.data){
            fetchedResults.push({
                ...response.data[key],
                id:key
            });
        }
        let selectedResult=fetchedResults.find(e=>e.id===action.rid);
        yield put(actions.fetchSelectedResultSuccess(selectedResult));
    }catch(error){
        yield put(actions.fetchSelectedResultFailed(error));
    }
}